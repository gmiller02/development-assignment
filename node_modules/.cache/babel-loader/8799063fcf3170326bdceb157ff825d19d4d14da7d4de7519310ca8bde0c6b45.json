{"ast":null,"code":"var _jsxFileName = \"/Users/gracemiller/Desktop/cs1300/development-assignment/development-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Play from './play.js';\nimport playsData from './playData.json';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreMapping = {\n  '~c~': 'Comedy',\n  '~t~': 'Tragedy',\n  '~h~': 'History',\n  '~p~': 'Poem',\n  '~s~': 'Sonnets'\n};\nfunction App() {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [sortedPlays, setSortedPlays] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const addToFavorites = play => {\n    setFavorites([...favorites, play]);\n  };\n  const removeFromFavorites = workID => {\n    setFavorites(favorites.filter(play => play.WorkID !== workID));\n  };\n  const handleGenreChange = event => {\n    const selectedGenre = event.target.value;\n    setSelectedGenre(selectedGenre);\n    console.log(\"Selected Genre:\", selectedGenre); // Log the selected genre\n  };\n  const filterPlaysByGenre = () => {\n    if (selectedGenre === '') {\n      console.log(\"No genre selected. Displaying all plays.\");\n      return playsData;\n    } else {\n      const filteredPlays = playsData.filter(play => play.GenreType === selectedGenre);\n      console.log(\"Filtered Plays:\", filteredPlays); // Log the filtered plays\n      return filteredPlays;\n    }\n  };\n  const sortPlaysByDate = () => {\n    const sortedPlays = [...playsData].sort((a, b) => {\n      return new Date(a.Date) - new Date(b.Date);\n    });\n    setSortedPlays(sortedPlays);\n  };\n  const resetFilters = () => {\n    setSelectedGenre('');\n    setSortedPlays([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shakespeare Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sortPlaysByDate,\n            children: \"Sort by Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"genreFilter\",\n            children: \"Filter by Genre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"genreFilter\",\n            value: selectedGenre,\n            onChange: handleGenreChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), Object.entries(genreMapping).map(([abbreviated, full]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: abbreviated,\n              children: full\n            }, abbreviated, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetFilters,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: (sortedPlays.length ? sortedPlays : filterPlaysByGenre()).map(playData => /*#__PURE__*/_jsxDEV(Play, {\n              playData: playData,\n              onFavorite: addToFavorites,\n              onRemoveFromFavorites: removeFromFavorites\n            }, playData.WorkID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: favorites.map(favorite => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: favorite.Title\n            }, favorite.WorkID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ZpBOKW0CX4KrLGREgavaR/9O8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Play","playsData","useState","jsxDEV","_jsxDEV","genreMapping","App","_s","favorites","setFavorites","sortedPlays","setSortedPlays","selectedGenre","setSelectedGenre","addToFavorites","play","removeFromFavorites","workID","filter","WorkID","handleGenreChange","event","target","value","console","log","filterPlaysByGenre","filteredPlays","GenreType","sortPlaysByDate","sort","a","b","Date","resetFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","Object","entries","map","abbreviated","full","length","playData","onFavorite","onRemoveFromFavorites","favorite","Title","_c","$RefreshReg$"],"sources":["/Users/gracemiller/Desktop/cs1300/development-assignment/development-assignment/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Play from './play.js';\nimport playsData from './playData.json';\nimport { useState } from \"react\";\n\nconst genreMapping = {\n  '~c~': 'Comedy',\n  '~t~': 'Tragedy',\n  '~h~': 'History',\n  '~p~': 'Poem',\n  '~s~': 'Sonnets'\n};\n\nfunction App() {\n  const [favorites, setFavorites] = useState([]);\n  const [sortedPlays, setSortedPlays] = useState([]); \n  const [selectedGenre, setSelectedGenre] = useState('');\n\n  const addToFavorites = (play) => {\n    setFavorites([...favorites, play]);\n  };\n\n  const removeFromFavorites = (workID) => {\n    setFavorites(favorites.filter(play => play.WorkID !== workID));\n  };\n\n  const handleGenreChange = (event) => {\n    const selectedGenre = event.target.value;\n    setSelectedGenre(selectedGenre);\n    console.log(\"Selected Genre:\", selectedGenre); // Log the selected genre\n  };\n\n  const filterPlaysByGenre = () => {\n    if (selectedGenre === '') {\n      console.log(\"No genre selected. Displaying all plays.\");\n      return playsData;\n    } else {\n      const filteredPlays = playsData.filter(play => play.GenreType === selectedGenre);\n      console.log(\"Filtered Plays:\", filteredPlays); // Log the filtered plays\n      return filteredPlays;\n    }\n  };\n\n  const sortPlaysByDate = () => {\n    const sortedPlays = [...playsData].sort((a, b) => {\n      return new Date(a.Date) - new Date(b.Date);\n    });\n    setSortedPlays(sortedPlays);\n  };\n\n  const resetFilters = () => {\n    setSelectedGenre('');\n    setSortedPlays([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"content\">\n        <div className=\"left-column\">\n          <h1>Shakespeare Library</h1>\n          <div>\n            <button onClick={sortPlaysByDate}>Sort by Year</button> \n            <label htmlFor=\"genreFilter\">Filter by Genre: </label>\n            <select id=\"genreFilter\" value={selectedGenre} onChange={handleGenreChange}>\n              <option value=\"\">All</option>\n              {Object.entries(genreMapping).map(([abbreviated, full]) => (\n                <option key={abbreviated} value={abbreviated}>{full}</option>\n              ))}\n            </select>\n            <button onClick={resetFilters}>Reset</button>\n          </div>\n\n          <div className=\"play-list\">\n            <div className=\"grid-container\">\n              {(sortedPlays.length ? sortedPlays : filterPlaysByGenre()).map((playData) => (\n                <Play key={playData.WorkID} playData={playData} onFavorite={addToFavorites} onRemoveFromFavorites={removeFromFavorites}/>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"right-column\">\n          <div className=\"favorites\">\n            <h2>Favorites</h2>\n            <ul>\n              {favorites.map((favorite) => (\n                <li key={favorite.WorkID}>{favorite.Title}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}