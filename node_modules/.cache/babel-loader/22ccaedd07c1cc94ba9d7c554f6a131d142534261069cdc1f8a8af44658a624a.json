{"ast":null,"code":"var _jsxFileName = \"/Users/gracemiller/Desktop/cs1300/development-assignment/development-assignment/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Play from './play.js';\nimport playsData from './playData.json';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreMapping = {\n  'c': 'Comedy',\n  't': 'Tragedy',\n  'h': 'History',\n  'p': 'Poem',\n  's': 'Sonnets'\n};\nfunction App() {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [sortedPlays, setSortedPlays] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const addToFavorites = play => {\n    setFavorites([...favorites, play]);\n  };\n  const removeFromFavorites = workID => {\n    setFavorites(favorites.filter(play => play.WorkID !== workID));\n  };\n  const handleGenreChange = event => {\n    const selectedGenre = event.target.value;\n    setSelectedGenre(selectedGenre);\n  };\n  const filterPlaysByGenre = () => {\n    if (selectedGenre === '') {\n      return playsData;\n    } else {\n      return playsData.filter(play => play.GenreType === selectedGenre);\n    }\n  };\n  const sortPlaysByDate = () => {\n    const sortedPlays = [...playsData].sort((a, b) => {\n      return new Date(a.Date) - new Date(b.Date);\n    });\n    setSortedPlays(sortedPlays);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shakespeare Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortPlaysByDate,\n        children: \"Sort by Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genreFilter\",\n        children: \"Filter by Genre: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genreFilter\",\n        value: selectedGenre,\n        onChange: handleGenreChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), Object.entries(genreMapping).map(([abbreviated, full]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: abbreviated,\n          children: full\n        }, abbreviated, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: (sortedPlays.length ? sortedPlays : filterPlaysByGenre()).map(playData => /*#__PURE__*/_jsxDEV(Play, {\n          playData: playData,\n          onFavorite: addToFavorites,\n          onRemoveFromFavorites: removeFromFavorites\n        }, playData.WorkID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: favorites.map(favorite => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: favorite.Title\n        }, favorite.WorkID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7ZpBOKW0CX4KrLGREgavaR/9O8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Play","playsData","useState","jsxDEV","_jsxDEV","genreMapping","App","_s","favorites","setFavorites","sortedPlays","setSortedPlays","selectedGenre","setSelectedGenre","addToFavorites","play","removeFromFavorites","workID","filter","WorkID","handleGenreChange","event","target","value","filterPlaysByGenre","GenreType","sortPlaysByDate","sort","a","b","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","Object","entries","map","abbreviated","full","length","playData","onFavorite","onRemoveFromFavorites","favorite","Title","_c","$RefreshReg$"],"sources":["/Users/gracemiller/Desktop/cs1300/development-assignment/development-assignment/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Play from './play.js';\nimport playsData from './playData.json';\nimport { useState } from \"react\";\n\nconst genreMapping = {\n  'c': 'Comedy',\n  't': 'Tragedy',\n  'h': 'History',\n  'p': 'Poem',\n  's': 'Sonnets'\n};\n\nfunction App() {\n  const [favorites, setFavorites] = useState([]);\n  const [sortedPlays, setSortedPlays] = useState([]); \n  const [selectedGenre, setSelectedGenre] = useState('');\n\n  const addToFavorites = (play) => {\n    setFavorites([...favorites, play]);\n  };\n\n  const removeFromFavorites = (workID) => {\n    setFavorites(favorites.filter(play => play.WorkID !== workID));\n  };\n\n  const handleGenreChange = (event) => {\n    const selectedGenre = event.target.value;\n    setSelectedGenre(selectedGenre);\n  };\n\n  const filterPlaysByGenre = () => {\n    if (selectedGenre === '') {\n      return playsData;\n    } else {\n      return playsData.filter(play => play.GenreType === selectedGenre);\n    }\n  };\n\n  const sortPlaysByDate = () => {\n    const sortedPlays = [...playsData].sort((a, b) => {\n      return new Date(a.Date) - new Date(b.Date);\n    });\n    setSortedPlays(sortedPlays);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Shakespeare Library</h1>\n      <div>\n        <button onClick={sortPlaysByDate}>Sort by Year</button> \n        <label htmlFor=\"genreFilter\">Filter by Genre: </label>\n        <select id=\"genreFilter\" value={selectedGenre} onChange={handleGenreChange}>\n          <option value=\"\">All</option>\n          {Object.entries(genreMapping).map(([abbreviated, full]) => (\n            <option key={abbreviated} value={abbreviated}>{full}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"play-list\">\n        <div className=\"grid-container\">\n          {(sortedPlays.length ? sortedPlays : filterPlaysByGenre()).map((playData) => (\n            <Play key={playData.WorkID} playData={playData} onFavorite={addToFavorites} onRemoveFromFavorites={removeFromFavorites}/>\n          ))}\n        </div>\n      </div>\n      <div className=\"favorites\">\n        <h2>Favorites</h2>\n        <ul>\n          {favorites.map((favorite) => (\n            <li key={favorite.WorkID}>{favorite.Title}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}